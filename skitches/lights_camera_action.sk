use shapes

action movecamera {
    num position = 0.0
    num time = 20.0
    num to = 3.0
    num zsch = 0.0
    num xsch = 0.0
    num at = 0.0

    init:
        position == 0.0 -> southwest
        position == 1.0 -> northwest
        position == 2.0 -> northeast
        position == 3.0 -> southeast
        _ -> southwest

    southwest:
        zsch = c.lz to -!
        xsch = c.lx to -!
        _ -> lerpit

    northwest:
        zsch = c.lz to +!
        xsch = c.lx to -!
        _ -> lerpit

    northeast:
        zsch = c.lz to +!
        xsch = c.lx to +!
        _ -> lerpit

    southeast:
        zsch = c.lz to -!
        xsch = c.lx to +!
        _ -> lerpit

    lerpit:
        at += 1.0 time /!
        c.tz = 1.0 at - c.tz * zsch at * +!
        c.tx = 1.0 at - c.tx * xsch at * +!
        at >= 1.0 -> finalize
        _ -> lerpit

    finalize:
        c.tz = zsch!
        c.tx = xsch!
        _ -> deinit

}

action simplecamera {
    num time = 30.0
    num dist = 3.0
    num height = 3.0
    num xs = 0.0
    num zs = 0.0
    num needinit = 1.0
    num ascratch = 0.0
    num last = 0.0
    
    init:
        c.ty = height!
        ascratch = o.ry!
        k.Left == keydown -> left
        k.Up == keydown -> top
        k.Right == keydown -> right
        k.Down == keydown -> bottom
        k.F == keydown -> elevate
        k.D == keydown -> lower
        needinit == 1.0 -> eval 
        _ -> init

    elevate:
        height += 0.2!
        height >= 5.0 -> toplimit
        _ -> init

    lower:
        height -= 0.2!
        height <= 0.2 -> bottomlimit
        _ -> init
    
    toplimit:
        height = 5.0!
        _ -> init

    bottomlimit:
        height = 0.2!
        _ -> init
 
    eval:
        needinit = 0.0!
        last == 0.0 -> left
        last == 1.0 -> top
        last == 2.0 -> right
        last == 3.0 -> bottom
        _ -> init

    forward:
        xs = o.tz dist +!
        punch zlerp
        ~|lerp c.lz xs time|~'zlerp
        ~|lerp o.tz xs time|~'zlerp
        _ -> eval

    backward:
        xs = o.tz dist -!
        punch zlerp
        ~|lerp c.lz xs time|~'zlerp
        ~|lerp o.tz xs time|~'zlerp
        _ -> eval

    leftway:
        xs = o.tx dist -!
        punch xlerp
        ~|lerp c.lx xs time|~'xlerp
        ~|lerp o.tx xs time|~'xlerp
        _ -> eval

    rightway:
        xs = o.tx dist +!
        punch xlerp
        ~|lerp c.lx xs time|~'xlerp
        ~|lerp o.tx xs time|~'xlerp
        _ -> eval
        
    left:
        ~|movecamera _ 0.0 time dist|~
        _ -> init

    top:
        ~|movecamera _ 1.0 time dist|~
        _ -> init

    right:
        ~|movecamera _ 2.0 time dist|~
        _ -> init

    bottom:
        ~|movecamera _ 3.0 time dist|~
        _ -> init
}



generator genplayer {
    plane player(1.0)
    a: simplecamera(100.0)
    i: simplelighting
    o: 0.0 0.0 0.0
}
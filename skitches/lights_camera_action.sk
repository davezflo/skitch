use shapes

num here = 0.0
num there = 0.0

action configurecamera {
    num r = 3.0
    num angle = 180.0
    num above = 2.0
    num pi = 3.14159
    init:
        c.tx = o.tx angle 180.0 / pi * cos r * +!
        c.ty = o.ty above +!
        c.tz = o.tz angle 180.0 / pi * sin r * +!
        _ -> deinit
}

action updatecamera {
    num r = 3.0
    num angle = 180.0
    num above = 2.0
    num pi = 3.14159
    init:
        c.tx = o.tx angle 180.0 / pi * cos r * +!
        c.ty = o.ty above +!
        c.tz = o.tz angle 180.0 / pi * sin r * +!
        c.lx = o.tx!
        c.lz = o.tz!
        _ -> deinit
}

action configurelights {
    num time = 10.0
    num counter = 0.0
    init:
        l.tx += 0.4!
        l.ty += 0.1!
        l.tz -= 0.2!
        counter += 1.0!
        counter == time -> deinit
        _ -> init
}

action bank {
    num time = 180.0
    num angle = -45.0
    num targetangle = 0.0
    num finalangle = 0.0
    num comptarget = 0.0
    num compangle = 0.0
    num at = 0.0
    
    init:
        finalangle = targetangle!
        targetangle = angle!
        angle = finalangle!
        at = 0.0!
        _ -> initiate

    initiate:
        at += 1.0 time 0.1 * /!
        angle = 1.0 at - angle * at targetangle * +!
        o.pa = angle!
        comptarget = targetangle abs 0.0001 -!
        compangle = angle abs!
        compangle >= comptarget -> reset
        _ -> initiate

    reset:
        at = 0.0!
        targetangle = finalangle!
        _ -> recover
    
    recover:
        at += 1.0 time /!
        angle = 1.0 at - angle * at targetangle * +!
        o.pa = angle!
        angle == targetangle -> finalize!
        _ -> recover

    finalize:
        _ -> deinit
}

action shift {
    num time = 0.0
    num amount = 0.0
    num at = 0.0
    num target = 0.0
    num comptarget = 0.0
    num compvalue = 0.0

    num r = 3.0
    num angle = 180.0
    num above = 2.0
    num pi = 3.14159
    
    init:
        target = o.pa amount +!
        _ -> lerploop

        lerploop:
            at += 1.0 time /!
            o.pa = 1.0 at - o.pa * at target * +!
            c.tx = o.tx angle 180.0 / pi * cos r * +!
            c.ty = o.ty above +!
            c.tz = o.tz angle 180.0 / pi * sin r * +!
            c.lx = o.tx!
            c.lz = o.tz!
            o.pa == target -> finalize
            _ -> lerploop

    finalize:
        here = o.pa!
        _ -> deinit
        
}

action shipcontrol {
    num repeat = 0.0
    init:
        repeat = 0.0!
        k.Left == keydown -> left
        k.Right == keydown -> right
        _ -> init

    left:
        punch zlerp
        ~|bank o.rx 90.0 -45.0 0.0|~'zlerp
        ~|shift o.tz 100.0 0.8|~'zlerp
        _ -> init
    
    right: 
        punch zlerp
        ~|bank o.rx 90.0 45.0 0.0|~'zlerp
        ~|shift o.tz 100.0 -0.8|~'zlerp
        _ -> init

}

action targetspin {
    init:
        o.rx += 1.0!
        o.ry += 2.0!
        _ -> init
}

generator target {
    box target(1.0)
    a: targetspin()
    o: 12.0 -1.0 0.0
}

generator genplayer {
    plane player(1.0)
    a: configurecamera()
    a: configurelights()
    a: shipcontrol()
    i: simplelighting
    o: 0.0 0.0 0.0
}

watch {
    camera
    here
    there
}